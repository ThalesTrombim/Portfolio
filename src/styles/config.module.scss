%flex-center {
    display: flex;
    align-items: center;
    justify-content: center;
}
%reset-link {
    text-decoration: none;
    color: inherit;
    display: flex;
    align-items: center;
    justify-content: center;
}

$white: var(--white);
$black: var(--black);
$gray: var(--gray);
$orange: var(--orange);
$blue: var(--orange);

$themes: (
    dark: (
      bg: $blue,
      text: $white,
      text-menu: $orange,
      bg-opposite: $gray,
      text-opposite: $black,
    ),
    light: (
        bg: $gray,
        text: $black,
        text-menu: $orange,
        bg-opposite: $blue,
        text-opposite: $white,
    ),
);


@mixin themeSwitcher($themes) {
    @each $theme, $map in $themes {
      .theme-#{$theme} & {
        $theme-map: () !global;
        @each $key, $submap in $map {
          $value: map-get(map-get($themes, $theme), '#{$key}');
          $theme-map: map-merge($theme-map, ($key: $value)) !global;
        }
        @content;
        $theme-map: null !global;
      }
    }
}

@function themed($key) {
    @return map-get($theme-map, $key);
}

$small: 430px;
$medium: 1136px;
$large: 1440px
